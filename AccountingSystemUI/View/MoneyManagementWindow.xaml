<Window x:Class="AccountingSystemUI.View.MoneyManagementWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:AccountingSystemUI.View"
        xmlns:vm="clr-namespace:AccountingSystemUI.ViewModel"
        xmlns:wc="clr-namespace:AccountingSystemUI.CustomizeWindow"
        mc:Ignorable="d"
        Title=""
        Height="450" Width="800"
        wc:WindowCustomizer.CanMaximize="False"
        vm:DialogCloser.DialogResult="{Binding Path=DialogResult}">
    <Window.Resources>
        <Style TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <!--<Setter Property="Background" Value="LightCoral" />-->
                    <Setter Property="Foreground" Value="Black" />
                    <Setter Property="ToolTip"
                        Value="{Binding RelativeSource={RelativeSource Self},
                        Path=(Validation.Errors)/ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel LastChildFill="True">
                            <TextBlock Foreground="Red" FontSize="20" Text="!"
                            ToolTip="{Binding ElementName=controlWithError,
                            Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"/>
                            <Border BorderBrush="Red" BorderThickness="0">
                                <AdornedElementPlaceholder Name="controlWithError" />
                            </Border>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ComboBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <!--<Setter Property="Background" Value="LightCoral" />-->
                    <Setter Property="Foreground" Value="Black" />
                    <Setter Property="ToolTip"
                        Value="{Binding RelativeSource={RelativeSource Self},
                        Path=(Validation.Errors)/ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel LastChildFill="True">
                            <TextBlock Foreground="Red" FontSize="20" Text="!"
                            ToolTip="{Binding ElementName=controlWithError,
                            Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"/>
                            <Border BorderBrush="Red" BorderThickness="1">
                                <AdornedElementPlaceholder Name="controlWithError" />
                            </Border>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <vm:IndexConverter x:Key="IndexConverter"/>
        <vm:DataMultiConverter x:Key="DataConverter"/>
        <vm:PositiveToCollapseConverter x:Key="PositiveToCollapseConverter"/>
        <vm:EnumDescriptionConverter x:Key="EnumDescriptionConverter"/>
        <vm:OpTypeDescriptionConverter x:Key="OpTypeDescriptionConverter"/>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="70" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Menu Grid.Row="0" HorizontalAlignment="Left" Width="42">
            <MenuItem Header="_Файл">
                <MenuItem Visibility="{Binding Path=VisibilityMenu}" Header="_Управление пользователями"
                          Command="{Binding Path=OpenUserManagementForm}"/>
                <MenuItem Visibility="{Binding Path=VisibilityMenu}" Header="_Выгрузить данные в отчет" 
                          Command="{Binding Path=ExcelExport}" CommandParameter="{Binding Path=CurrentUser}"/>
                <Separator />
                <MenuItem Header="_Выход" Click="MenuItem_Click"/>
            </MenuItem>
        </Menu>
        <DataGrid Name="dgTransactions" AutoGenerateColumns="False" Grid.Row="1" IsReadOnly="True"
                  MinHeight="100" ItemsSource="{Binding Path=CurrentUserTransactions}" Margin="0">

            <DataGrid.Columns>
                <!--<DataGridTextColumn ClipboardContentBinding="{x:Null}" Header="№"
                            Binding="{Binding Converter={StaticResource IndexConverter},
                            Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}}" />-->
                <DataGridTextColumn  Header="Операция" Binding = "{Binding OpType, Converter={StaticResource OpTypeDescriptionConverter}}"/>
                <DataGridTextColumn  Header="Категория" Binding = "{Binding Category}"/>
                <DataGridTextColumn  Header="Получатель" Binding = "{Binding Recipient}"/>
                <DataGridTextColumn  Header="Описание" Binding = "{Binding Description}"/>
                <DataGridTextColumn  Header="Сумма операции" Binding = "{Binding TransactionAmount}"/>
                <DataGridTextColumn  Header="Баланс" Binding = "{Binding BalanceAfterTransact}"/>
                <DataGridTextColumn  Header="Дата" Binding = "{Binding Date, StringFormat='dd.MM.yy (HH:MM)'}"/>
            </DataGrid.Columns>
        </DataGrid>
        <GroupBox Grid.Row="2" Header="Добавление записи">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="439*" MinWidth="380"/>
                    <ColumnDefinition Width="221*" MinWidth="210"/>
                    <ColumnDefinition Width="120*" MinWidth="80"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>
                <StackPanel Grid.Row="0" Orientation="Horizontal">
                    <Label Content="Вид операции"/>
                    <Label Content="Категория" Margin="20,0,0,0" />
                    <Label Content="Получатель" Margin="60,0,0,0" />
                </StackPanel>
                <StackPanel Grid.Row="1"  Orientation="Horizontal">
                    <ComboBox  x:Name="cbOpType" Height="20" 
                    ItemsSource="{Binding Path=OpTypes, ValidatesOnDataErrors=True, ValidatesOnExceptions=True, Mode=OneWay}"
                    SelectedItem="{Binding Path=NewDataOpType, Converter={StaticResource EnumDescriptionConverter}}" VerticalAlignment="Top" Margin="0,0,15,0" Width="90"/>
                    <ComboBox x:Name="cbCategory" SelectedIndex="0" Height="20" VerticalAlignment="Top" Margin="0,0,5,0"
                    ItemsSource="{Binding Path=Categories, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}"
                    SelectedItem="{Binding Path=NewData.Category}" Width="90" />
                    <Button VerticalAlignment="Top" HorizontalAlignment="Left" Width="20" Height="20" Content="+"
                            FontWeight="Bold" FontSize="16" Margin="0,0,15,0"  Foreground="#FF1FD828" Padding="1,0"
                            Command="{Binding Path=OpenAddCategoryFormCmd}"
                            Visibility="{Binding Path=VisibilityNewCatBtn}"/>
                    <ComboBox  x:Name="cbRecipient" SelectedIndex="0" Height="20" 
                    ItemsSource="{Binding Path=Recipients, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}"
                    SelectedItem="{Binding Path=NewData.Recipient}" VerticalAlignment="Top" Margin="0,0,5,0" Width="90"/>
                    <Button VerticalAlignment="Top" HorizontalAlignment="Left" Width="20" Height="20" Content="+"
                            FontWeight="Bold" FontSize="16" Margin="0,0,15,0"  Foreground="#FF1FD828" Padding="1,0"
                            Command="{Binding Path=OpenAddRecipientFormCmd}"
                            Visibility="{Binding Path=VisibilityNewCatBtn}"/>
                </StackPanel>
                <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal"  HorizontalAlignment="Right" Width="165">
                    <Label Content="Описание" Height="25"/>
                    <TextBox x:Name="txtDescr" Height="20"
                    Text="{Binding Path=NewData.Description, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" VerticalAlignment="Top" Width="100" />
                </StackPanel>
                <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right" Grid.Column="1" Width="210">
                    <Label Content="Сумма операции: " Height="25" Margin="0" VerticalAlignment="Top" />
                    <TextBox  x:Name="txtSum" Height="20"
                    Text="{Binding Path=NewData.TransactionAmount, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" Margin="0" VerticalAlignment="Top" Width="100"/>
                </StackPanel>
                <StackPanel Grid.Row="1" Grid.Column="2" HorizontalAlignment="Right" Orientation="Horizontal" Width="70">
                    <Button Height="20" Width="70" Content="Добавить" HorizontalContentAlignment="Center"
                        Command="{Binding Path=DataContext.AddDataCmd,
                        RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" >
                        <Button.CommandParameter>
                            <MultiBinding ValidatesOnDataErrors="True" 
                                  Converter= "{StaticResource DataConverter}">

                                <!--todo: configure transmission of validation errors by one object...-->

                                <Binding ElementName="cbOpType" Path="(Validation.HasError)" ></Binding>
                                <Binding ElementName="cbCategory" Path="(Validation.HasError)" ></Binding>
                                <Binding ElementName="cbRecipient" Path="(Validation.HasError)" ></Binding>
                                <Binding ElementName="txtDescr" Path="(Validation.HasError)" ></Binding>
                                <Binding ElementName="txtSum" Path="(Validation.HasError)" ></Binding>

                                <Binding ElementName="cbOpType" Path="SelectedItem"></Binding>
                                <Binding ElementName="cbCategory" Path="SelectedItem" ></Binding>
                                <Binding ElementName="cbRecipient" Path="SelectedItem" ></Binding>
                                <Binding ElementName="txtDescr" Path="Text" ></Binding>
                                <Binding ElementName="txtSum" Path="Text" ></Binding>


                            </MultiBinding>
                        </Button.CommandParameter>
                    </Button>
                </StackPanel>
            </Grid>
        </GroupBox>
        <StatusBar Grid.Row="3">
            <StatusBarItem>
                <TextBlock>Режим работы:</TextBlock>
            </StatusBarItem>
            <StatusBarItem>
                <TextBlock x:Name="txtMode" Text="{Binding Path=Mode}"/>
            </StatusBarItem>
            <Separator/>
            <StatusBarItem>
                <TextBlock x:Name="txtUser" Text="{Binding Path=CurrentUser}"/>
            </StatusBarItem>
            <Separator/>
            <StatusBarItem>
                <TextBlock Text="Отрицательный баланс!" Foreground="Red"
                           Visibility="{Binding Path=CurrentUser.Balance, Converter={StaticResource PositiveToCollapseConverter}}"                           />
            </StatusBarItem>
            <StatusBarItem>
                <TextBlock Text="Подключение к базе данных отсутсвует" Foreground="Red" Visibility="{Binding Path=VisibilityConnectDBWarning}" />
            </StatusBarItem>

        </StatusBar>
    </Grid>
</Window>
